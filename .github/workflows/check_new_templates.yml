name: Contributed template check
on:
  pull_request:
    branches:
    - main
    paths:
      - templates.smi

jobs:
  Check_new_templates:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python & RDKit
      uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: 'latest'
        environment-file: environment.yml
        generate-run-shell: true
        cache-environment: true
        post-cleanup: 'none'
    - name: Run basic checks
      if: success()
      run: pytest -n=auto checks/test_requisites.py
      shell: micromamba-shell {0}
    - name: Run check for duplicates
      if: success()
      run: pytest -sv checks/test_duplicates.py
      shell: micromamba-shell {0}
    - name: Run image generation and upload
      id: img-gen
      if: success()
      env:
        GH_PR_BASE: ${{ github.event.pull_request.base.sha }}
        IMGUR_ACCESS_TOKEN:  ${{ secrets.IMGUR_ACCESS_TOKEN }}
        IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
        IMGUR_CLIENT_SECRET: ${{ secrets.IMGUR_CLIENT_SECRET }}
        IMGUR_REFRESH_TOKEN: ${{ secrets.IMGUR_REFRESH_TOKEN }}
      run: python3 src/img_generation.py
      shell: micromamba-shell {0}
    - name: Comment on the PR about the result
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          urls = ${{ steps.imgur_upload.outputs.markdown_urls }}
          imgs = ""
          for (const url of urls) {
            imgs += url + " "
          }
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: imgs
          })
